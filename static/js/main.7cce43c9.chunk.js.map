{"version":3,"sources":["assets/LightMaterial.js","components/Lights.jsx","assets/nameThree.glb","components/MyName.jsx","components/Env.jsx","components/Fresco.jsx","assets/github-logo.png","assets/blog-icon.png","components/Info.jsx","App.js","index.js"],"names":["LightMaterial","uniforms","uTime","value","uPixelRatio","Math","min","window","devicePixelRatio","uSize","vertexShader","fragmentShader","this","v","THREE","extend","Lights","count","shader","useRef","useMemo","positionArray","Float32Array","scaleArray","i","random","toArray","useFrame","state","delta","current","time","attachObject","array","itemSize","ref","transparent","depthWrite","MyName","useGLTF","name","nodes","materials","text","clock","rotation","x","sin","getElapsedTime","material","Mat","geometry","Text","position","Env","rotation-x","PI","scale","color","Fresco","camera","intensity","attach","args","OrbitControls","enablePan","enableZoom","enableRotate","minPolarAngle","maxPolarAngle","maxZoom","Info","className","class","href","src","Image","alt","width","Image3","getWindowDimensions","innerWidth","height","innerHeight","App","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","style","fallback","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7cce43c9.chunk.js","sourcesContent":["import * as THREE from \"three\";\nimport { extend } from \"@react-three/fiber\";\n\nexport default class LightMaterial extends THREE.ShaderMaterial {\n  constructor() {\n    super({\n      uniforms: {\n        uTime: { value: 0 },\n        uPixelRatio: { value: Math.min(window.devicePixelRatio, 2) },\n        uSize: { value: 150 },\n      },\n      vertexShader: `\n      uniform float uPixelRatio;\n      uniform float uSize;\n      uniform float uTime;\n      attribute float aScale;    \n      void main() {\n        vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n        modelPosition.y += sin(uTime + modelPosition.x * 100.0) * aScale * 0.2;\n        modelPosition.z += cos(uTime + modelPosition.x * 100.0) * aScale * 0.2;\n        modelPosition.x += cos(uTime + modelPosition.x * 100.0) * aScale * 0.2;\n        vec4 viewPosition = viewMatrix * modelPosition;\n        vec4 projectionPostion = projectionMatrix * viewPosition;    \n        gl_Position = projectionPostion;\n        gl_PointSize = uSize * aScale * uPixelRatio;\n        gl_PointSize *= (1.0 / - viewPosition.z);\n      }`,\n      fragmentShader: `\n      void main() {\n        float distanceToCenter = distance(gl_PointCoord, vec2(0.5));\n        float strength = 0.05 / distanceToCenter - 0.1;\n        gl_FragColor = vec4(1.0, 1.0, 1.0, strength);\n      }`,\n    });\n  }\n\n  get time() {\n    return this.uniforms.uTime.value;\n  }\n\n  set time(v) {\n    this.uniforms.uTime.value = v;\n  }\n}\n\nextend({ LightMaterial });\n","import * as THREE from \"three\";\nimport { useRef, useMemo } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\nimport \"../assets/LightMaterial\";\n\nconst Lights = ({ count = 40 }) => {\n  const shader = useRef();\n  const [positionArray, scaleArray] = useMemo(() => {\n    const positionArray = new Float32Array(count * 3);\n    const scaleArray = new Float32Array(count);\n    for (let i = 0; i < count; i++) {\n      new THREE.Vector3(\n        (Math.random() - 0.5) * 15,\n        Math.random() * 1.5,\n        (Math.random() - 0.5) * 4\n      ).toArray(positionArray, i * 3);\n      scaleArray[i] = Math.random();\n    }\n    return [positionArray, scaleArray];\n  }, [count]);\n  useFrame((state, delta) => (shader.current.time += delta / 2));\n  return (\n    <points key={count}>\n      <bufferGeometry>\n        <bufferAttribute\n          attachObject={[\"attributes\", \"position\"]}\n          count={count}\n          array={positionArray}\n          itemSize={3}\n        />\n        <bufferAttribute\n          attachObject={[\"attributes\", \"aScale\"]}\n          count={count}\n          array={scaleArray}\n          itemSize={1}\n        />\n      </bufferGeometry>\n      <lightMaterial ref={shader} transparent depthWrite={false} />\n    </points>\n  );\n};\n\nexport default Lights;\n","export default __webpack_public_path__ + \"static/media/nameThree.c9d0a050.glb\";","import React, { useRef } from \"react\";\nimport { useGLTF } from \"@react-three/drei\";\nimport { useFrame } from \"@react-three/fiber\";\nimport name from \"../assets/nameThree.glb\";\n\nconst MyName = () => {\n  const { nodes, materials } = useGLTF(name);\n  const text = useRef();\n  useFrame(({ clock }) => {\n    text.current.rotation.x =\n      Math.sin(clock.getElapsedTime() * 0.7) * 0.3 + 7.7;\n  });\n  return (\n    <mesh\n      ref={text}\n      material={materials.Mat}\n      geometry={nodes.Text.geometry}\n      rotation={[1.5, 0, 0]}\n      position={[-5, 0, 0]}\n    />\n  );\n};\n\nexport default MyName;\n","import React from \"react\";\n\nconst Env = () => {\n  return (\n    <mesh position={[0, -1, 0]} rotation-x={-Math.PI / 2} scale={100}>\n      <planeGeometry />\n      <meshStandardMaterial color=\"#181818\" transparent depthWrite={false} />\n    </mesh>\n  );\n};\n\nexport default Env;\n","import React from \"react\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { OrbitControls } from \"@react-three/drei\";\nimport Lights from \"./Lights\";\nimport MyName from \"./MyName\";\nimport Env from \"./Env\";\n\nconst Fresco = () => {\n  return (\n    <Canvas camera={{ position: [0, 0, 9] }}>\n      <ambientLight intensity={3} />\n      <pointLight position={[-1, 12, -5]} />\n      <color attach=\"background\" args={[\"#002f0a\"]} />\n      <fog attach=\"fog\" args={[\"#002f0a\", 10, 50]} />\n      <OrbitControls\n        enablePan={true}\n        enableZoom={false}\n        enableRotate={true}\n        minPolarAngle={Math.PI / 2.8}\n        maxPolarAngle={Math.PI / 2.8}\n        maxZoom={0.1}\n      />\n      <MyName />\n      <Lights count={200} />\n      <Env />\n    </Canvas>\n  );\n};\n\nexport default Fresco;\n","export default __webpack_public_path__ + \"static/media/github-logo.3d9251d7.png\";","export default __webpack_public_path__ + \"static/media/blog-icon.6fa8edc0.png\";","import React from \"react\";\nimport \"./Info.css\";\nimport Image from \"../assets/github-logo.png\";\nimport Image3 from \"../assets/blog-icon.png\";\n\nconst Info = () => {\n  return (\n    <div className=\"infoContainer\">\n      <a class=\"link\" href=\"https://github.com/prince-ao\">\n        <img src={Image} alt=\"github logo\" width={54} />\n      </a>\n      <p>Email: princeaddo608@gmail.com</p>\n      <a class=\"link2\" href=\"https://prince-ao.github.io/blog/\">\n        <img src={Image3} alt=\"blog icon\" width={54} />\n      </a>\n    </div>\n  );\n};\n\nexport default Info;\n","import React, { useEffect, useState, Suspense } from \"react\";\nimport { Info, Fresco } from \"./components/index.js\";\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n}\n\nconst App = () => {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  return (\n    <>\n      <div\n        style={{\n          width: windowDimensions.width,\n          height: windowDimensions.height,\n        }}\n      >\n        <Suspense fallback={null}>\n          <Fresco />\n        </Suspense>\n      </div>\n      <Info />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}